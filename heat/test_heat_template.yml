heat_template_version: 2015-04-30

description: Simple template to deploy a single compute instance

resources:

#Net
  private_net:
    type: OS::Neutron::Net

#Subnet
  private_subnet:
    type: OS::Neutron::Subnet
    properties:
      network_id: { get_resource: private_net }
      cidr: "10.10.10.0/24"
      dns_nameservers: [ "8.8.8.8", "8.8.4.4" ]
      ip_version: 4

#Router
  private_router:
    type: OS::Neutron::Router
    properties:
      external_gateway_info: { network: public }
  private_interface:
    type: OS::Neutron::RouterInterface
    properties:
      router_id: { get_resource: private_router }
      subnet: { get_resource: private_subnet }

#Security group
  test_security_group:
    type: OS::Neutron::SecurityGroup
    properties:
      rules:
        - protocol: tcp
          remote_ip_prefix: 10.10.10.0/24
        - protocol: icmp
          remote_ip_prefix: 0.0.0.0/0
        - protocol: tcp
          remote_ip_prefix: 0.0.0.0/0
          port_range_min: 22
          port_range_max: 22
        - protocol: tcp
          remote_ip_prefix: 0.0.0.0/0
          port_range_min: 80
          port_range_max: 80

#Key
  my_key:
    type: OS::Nova::KeyPair
    properties:
      save_private_key: true
      name: test_key

#Instances
  host1:
    type: OS::Nova::Server
    properties:
      image: Ubuntu 16.04 "Xenial Xerus"
      flavor: v2.m2.d5
      networks:
        - port: { get_resource: host1_port }
      key_name: { get_resource: my_key }
      # user_data: |
      #   #!/bin/bash
      #   sudo apt-get update
      #   sudo apt-get install -y python

#Ports
  host1_port:
    type: OS::Neutron::Port
    properties:
      network: { get_resource: private_net }
      security_groups:
        - { get_resource: test_security_group }
      fixed_ips:
        - ip_address: 10.10.10.11

#Floating IPs
  host1_floating_ip:
    type: OS::Nova::FloatingIP
    properties:
      pool: public

  host1_association:
    type: OS::Nova::FloatingIPAssociation
    properties:
      floating_ip: { get_resource: host1_floating_ip }
      server_id: { get_resource: host1 }
